# 仰晨不牛马
# 牛马时间：2022/7/9 21:52:23

"""
交集：A和B都有的部分（符号：&   和函数.intersection()等价）
并集：AB合并      （符号：|   和函数.union()等价）
差集：A比B的话就是只要A有的部分，B部分和相交部分都不要（符号：-  和函数.difference()等价）
对称差集：不要A和B相交的部分（符号：^ 和  函数 .symmetric_difference()等价）
"""

j集合x = {'鸡', '尼', '太', '美', 666, 777}
j集合y = {'鸡', '你', '胎', '霉', 666}

print('x和y的交集', j集合x & j集合y)                 #x和y的交集 {666, '鸡'}
print('x和y的交集',j集合x.intersection(j集合y))     #x和y的交集 {'鸡', 666}


print('x和y的并集',j集合x | j集合y)                 #x和y的并集 {'胎', '太', 777, '鸡', '尼', '你', '霉', '美', 666}
print('x和y的并集',j集合x.union(j集合y))            #x和y的并集 {'胎', '太', 777, '鸡', '尼', '你', '霉', '美', 666}


print('x比y的差值',j集合x - j集合y)                 #x比y的差值 {'尼', 777, '美', '太'}
print('x比y的差值',j集合x.difference(j集合y))       #x比y的差值 {'尼', 777, '美', '太'}


print('x和y的对称差值',j集合x ^ j集合y)                       #x和y的对称差值 {'尼', '胎', '霉', 777, '你', '太', '美'}
print('x和y的对称差值',j集合x.symmetric_difference(j集合y))   #x和y的对称差值 {'尼', '胎', '霉', 777, '你', '太', '美'}



j=j集合x&j集合y
print(j)        #{'鸡', 666}

j=j集合x-j集合y
print(j)        #{'美', 777, '尼', '太'}

j=j集合x^j集合y
print(j)        #{'霉', 777, '太', '你', '胎', '美', '尼'}

j=j集合x|j集合y
print(j)        #{'霉', '美', 777, '太', '尼', '你', '胎', 666, '鸡'}